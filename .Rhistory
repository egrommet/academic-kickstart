blogdown:::new_post_addin()
blogdown::stop_server()
devtools::install_github("rstudio/blogdown")
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::stop_server()
blogdown::start
blogdown::serve_site()
install.packages(c("glue", "readxl", "rmarkdown", "stringi", "tinytex"))
install.packages(c("glue", "readxl", "rmarkdown", "stringi", "tinytex"))
install.packages(c("glue", "readxl", "rmarkdown", "stringi", "tinytex"))
install.packages(c("glue", "readxl", "rmarkdown", "stringi", "tinytex"))
install.packages(c("glue", "readxl", "rmarkdown", "stringi", "tinytex"))
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
# install and load tidyverse's readxl package for dealing with xlsx files
install.packages("readxl")
library(readxl)
#load tidyvers
library(tidyverse)
# read in the data - we'll skip some rows to get to headers
lords_4_18 <- read_excel("./data/allowances-expenses-2018-19-month1-april.xlsx", skip = 5)
lords_4_18 <- lords_4_18 %>%
slice(-1)
spread_lords <- lords_4_18 %>%
select(Name, `No of Days Attended`, `Location of registered address (county or equivalent)`, Car,
`Rail/Ferry/Coach`, Air, Motorbike, `Taxis/Parking/Tolls`) %>%
mutate(`No of Days Attended` = as.numeric(`No of Days Attended`),
Car = as.numeric(Car),
`Rail/Ferry/Coach` = as.numeric(`Rail/Ferry/Coach`),
Air = as.numeric(Air),
Motorbike = as.numeric(Motorbike),
`Taxis/Parking/Tolls` = as.numeric(`Taxis/Parking/Tolls`))
View(lords_4_18)
View(spread_lords)
install.packages(c("callr", "cli", "colorspace", "e1071", "fs", "git2r", "httpuv", "lazyeval", "purrr", "Rcpp", "rgdal", "robustbase", "rstudioapi", "tibble", "V8"))
install.packages(c("callr", "cli", "colorspace", "e1071", "fs", "git2r", "httpuv", "lazyeval", "purrr", "Rcpp", "rgdal", "robustbase", "rstudioapi", "tibble", "V8"))
install.packages(c("callr", "cli", "colorspace", "e1071", "fs", "git2r", "httpuv", "lazyeval", "purrr", "Rcpp", "rgdal", "robustbase", "rstudioapi", "tibble", "V8"))
# load tidyverse
library(tidyverse)
# load up our data as a tibble - tibbles print well and can (but not always)
# make life easier
crimes <- read_csv("./data/2018-07-south-wales-street.csv")
# create a new dataframe called bikes from crimes
bikes <- crimes %>%
# and then remove the Context column
select(-Context) %>%
# and then rename some of columns - declare new name and assign (=) to old name
rename("Crimes" = "Crime type", "Outcome" = "Last outcome category", "LSOA_name" = "LSOA name") %>%
# filter our newly-named Crimes column to look for the text in quotes
filter(Crimes == "Bicycle theft") %>%
# mutate is a change function - so we are going to shange one of the
# categories but this one does old = new
mutate(Outcome = recode(Outcome,
"Investigation complete; no suspect identified" = "No suspect identified")) %>%
# start our pivot table by grouping our information on the Outcome column
group_by(Outcome) %>%
# summarise creates a new column that in this case counts up how many things
# are in our groups
summarise(outcome_count = n()) %>%
# to get things in descending order we need to us two functions - desc() and arrange()
arrange(desc(outcome_count))
# this is the start of our chart.
ggplot(bikes, aes(reorder(Outcome, outcome_count), outcome_count)) +
geom_bar(stat = "identity", fill = "red", alpha = 0.7) +
geom_text(aes(label = outcome_count), hjust = 0) +
theme_minimal(base_size = 12) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())+
coord_flip() +
labs(x = "Outcome", y = "Count",
title = "How many bicycle thefts were solved in Cardiff in July 2018?")
# export as an image
# ggsave("bike crime.png", width = 20, height = 10, units =  "cm")
blogdown::update_hugo()
blogdown::html_page()
getwd()
blogdown::html_page()
blogdown::html_page()
# load tidyverse
library(tidyverse)
# load up our data
crimes <- read_csv("./data/2018-07-south-wales-street.csv")
# create a new dataframe called bikes from crimes
bikes <- crimes %>%
# and then remove the Context column
select(-Context) %>%
# and then rename some of columns - declare new name and assign (=) to old name
rename("Crimes" = "Crime type", "Outcome" = "Last outcome category", "LSOA_name" = "LSOA name") %>%
# filter our newly-named Crimes column to look for the text in quotes
filter(Crimes == "Bicycle theft") %>%
# mutate is a change function - so we are going to shange one of the
# categories but this one does old = new
mutate(Outcome = recode(Outcome,
"Investigation complete; no suspect identified" = "No suspect identified")) %>%
# start our pivot table by grouping our information on the Outcome column
group_by(Outcome) %>%
# summarise creates a new column that in this case counts up how many things
# are in our groups
summarise(outcome_count = n()) %>%
# to get things in descending order we need to us two functions - desc() and arrange()
arrange(desc(outcome_count))
# this is the start of our chart.
ggplot(bikes, aes(reorder(Outcome, outcome_count), outcome_count)) +
geom_bar(stat = "identity", fill = "red", alpha = 0.7) +
geom_text(aes(label = outcome_count), hjust = 0) +
theme_minimal(base_size = 12) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())+
coord_flip() +
labs(x = "Outcome", y = "Count",
title = "How many bicycle thefts were solved in Cardiff in July 2018?")
# export as an image
# ggsave("bike crime.png", width = 20, height = 10, units =  "cm")
source('~/.active-rstudio-document', echo=TRUE)
---
title: "ggplot demo"
author: "Glyn Mottershead"
date: "20/03/2019"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## R Markdown
```{r}
library(tidyverse)
```
```{r crimes}
crimes <- read_csv("./data/2018-07-south-wales-street.csv")
```
## Pivot Table
```{r}
bikes <- crimes %>%
# and then remove the Context column
select(-Context) %>%
# and then rename some of columns - declare new name and assign (=) to old name
rename("Crimes" = "Crime type", "Outcome" = "Last outcome category", "LSOA_name" = "LSOA name") %>%
# filter our newly-named Crimes column to look for the text in quotes
filter(Crimes == "Bicycle theft") %>%
# mutate is a change function - so we are going to shange one of the
# categories but this one does old = new
mutate(Outcome = recode(Outcome,
"Investigation complete; no suspect identified" = "No suspect identified")) %>%
# start our pivot table by grouping our information on the Outcome column
group_by(Outcome) %>%
# summarise creates a new column that in this case counts up how many things
# are in our groups
summarise(outcome_count = n()) %>%
# to get things in descending order we need to us two functions - desc() and arrange()
arrange(desc(outcome_count))
head(bikes)
```
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
crimes <- read_csv("./data/2018-07-south-wales-street.csv")
crimes <- read_csv("./demo/data/2018-07-south-wales-street.csv")
crimes <- read_csv("2018-07-south-wales-street.csv")
bikes <- crimes %>%
# and then remove the Context column
select(-Context) %>%
# and then rename some of columns - declare new name and assign (=) to old name
rename("Crimes" = "Crime type", "Outcome" = "Last outcome category", "LSOA_name" = "LSOA name") %>%
# filter our newly-named Crimes column to look for the text in quotes
filter(Crimes == "Bicycle theft") %>%
# mutate is a change function - so we are going to shange one of the
# categories but this one does old = new
mutate(Outcome = recode(Outcome,
"Investigation complete; no suspect identified" = "No suspect identified")) %>%
# start our pivot table by grouping our information on the Outcome column
group_by(Outcome) %>%
# summarise creates a new column that in this case counts up how many things
# are in our groups
summarise(outcome_count = n()) %>%
# to get things in descending order we need to us two functions - desc() and arrange()
arrange(desc(outcome_count))
head(bikes)
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
blogdown::new_post(rmd = TRUE)
blogdown::new_post()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown:::new_post_addin()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::hugo_version()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown:::new_post_addin()
---
title: Pivot tables in R - looking at police data
author: Glyn Mottershead
date: '2019-04-09'
slug: pivot-tables-in-r-looking-at-police-data
categories:
- R
tags:
- Police
image:
caption: ''
focal_point: ''
---
# load tidyverse
library(tidyverse)
# create a new dataframe called bikes from crimes
bikes <- crimes %>%
# and then remove the Context column
select(-Context) %>%
# and then rename some of columns - declare new name and assign (=) to old name
rename("Crimes" = "Crime type", "Outcome" = "Last outcome category", "LSOA_name" = "LSOA name") %>%
# filter our newly-named Crimes column to look for the text in quotes
filter(Crimes == "Bicycle theft") %>%
# mutate is a change function - so we are going to shange one of the
# categories but this one does old = new
mutate(Outcome = recode(Outcome,
"Investigation complete; no suspect identified" = "No suspect identified")) %>%
# start our pivot table by grouping our information on the Outcome column
group_by(Outcome) %>%
# summarise creates a new column that in this case counts up how many things
# are in our groups
summarise(outcome_count = n()) %>%
# to get things in descending order we need to us two functions - desc() and arrange()
arrange(desc(outcome_count))
# this is the start of our chart.
ggplot(bikes, aes(reorder(Outcome, outcome_count), outcome_count)) +
geom_bar(stat = "identity", fill = "red", alpha = 0.7) +
geom_text(aes(label = outcome_count), hjust = 0) +
theme_minimal(base_size = 12) +
theme(panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank())+
coord_flip() +
labs(x = "Outcome", y = "Count",
title = "How many bicycle thefts were solved in Cardiff in July 2019?")
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::insert_image_addin()
blogdown:::new_post_addin()
knitr::opts_chunk$set(echo = TRUE)
install.packages("geogrid")
library(geogrid)
library(sf)
library(tmap)
install.packages("tmap")
library(geogrid)
library(sf)
library(tmap)
install.packages(c("dplyr", "geojsonio", "ggplot2", "jsonlite"))
install.packages("geogrid")
install.packages("RcppArmadillo")
install.packages("RcppArmadillo")
install.packages(c("geogrid", "knitr", "sf", "tmap"))
install.packages("blogdown")
blogdown::serve_site()
blogdown::serve_site()
hugo version
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::stop_server()
install.packages(c("dbplyr", "tibble", "XML"))
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
library(tidyverse)
props <- read_csv("https://first-python-notebook.readthedocs.io/_static/committees.csv")
head(props)
str(props)
contribs <- read_csv("https://first-python-notebook.readthedocs.io/_static/contributions.csv")
head(contribs)
str(contribs)
props$prop_name
props %>%
group_by(prop_name) %>%
count() %>%
# we'll do it in order
arrange(desc(n))
prop <- props %>%
filter(prop_name == "PROPOSITION 064- MARIJUANA LEGALIZATION. INITIATIVE STATUTE.")
str(contribs)
str(props)
merged <- left_join(prop, contribs, by ="calaccess_committee_id")
sum(merged$amount)
blogdown:::new_post_addin()
bblogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
library(geojsonio)
url <- "https://opendata.arcgis.com/datasets/5ce27b980ffb43c39b012c2ebeab92c0_2.geojson"
uk_map <- geojson_read(url, what = "sp")
library(ggplot2)
fort_uk_map <- fortify(uk_map, region = "pcon17cd")
set_RGEOS_CheckValidity(2L)
install.packages("rgeos")
set_RGEOS_CheckValidity(2L)
library(rgeos)
set_RGEOS_CheckValidity(2L)
library(ggplot2)
fort_uk_map <- fortify(uk_map, region = "pcon17cd")
library(jsonlite)
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
sign_data <- json_data$data$attributes$signatures_by_constituency
total_sig <- sum(sign_data$signature_count)
total_sig
View(sign_data)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- arrange(desc(sign_data))
View(sign_data)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- arrange(desc(sign_data$signature_count))
library(dplyr)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- arrange(desc(sign_data$signature_count))
library(dplyr)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- arrange(desc(sign_data$signature_count))
str(sign_data)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- arrange(desc(as.numeric(sign_data$signature_count)))
sign_data <- sign_data %>%
arrange(desc(signature_count))
View(sign_data)
?paste
library(jsonlite)
library(dplyr)
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
paste("json_data", as.POSIXlt(now), sep = " ")
library(jsonlite)
library(dplyr)
now <- Sys.time()
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
paste("json_data", as.POSIXlt(now), sep = " ")
assign()
?assign
assign(paste("json_data", as.POSIXlt(now), sep = " "), "json_data")
?rename
paste("json_data", as.POSIXlt(now), sep = " ")
json_data <- json_data %>%
mutate("timestamp" = now)
json_data <- json_data %>%
mutate(timestamp = now)
json_data <- json_data %>%
mutate(timestamp = Sys.time())
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- sign_data %>%
mutate(timestamp = Sys.time())
View(sign_data)
temp = NULL
temp <- rbind(temp, sign_data)
now <- Sys.time()
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- sign_data %>%
mutate(timestamp = Sys.time())
temp <- rbind(temp, sign_data)
View(temp)
install.packages("cronR")
library(jsonlite)
library(dplyr)
library(cronR)
temp = NULL
cronR:::cron_rstudioaddin()
install.packages(c('shiny', 'miniUI', 'shinyFiles'))
install.packages(c("shiny", "miniUI", "shinyFiles"))
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
cronR:::cron_rstudioaddin()
library(cronR)
f <- system.file(package = "cronR", "chrontest.R")
cmd <- cron_rscript(f)
cmd
cmd <- cron_rscript(f)
cmd <- cron_rscript(f)
f <- system.file(package = "cronR", "extdata", "chrontest.R")
cmd <- cron_rscript(f)
cmd
temp = data.frame()
library(jsonlite)
library(dplyr)
temp = data.frame()
now <- Sys.time()
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- sign_data %>%
mutate(timestamp = Sys.time())
if (temp == 0) {
temp <- sign_data
} else {
temp <- rbind(temp, sign_data)
}
if (dim(temp) == NULL) {
temp <- sign_data
} else {
temp <- rbind(temp, sign_data)
}
dim(temp)
library(jsonlite)
library(dplyr)
temp = NULL
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- sign_data %>%
mutate(timestamp = Sys.time())
if (dim(temp) == NULL) {
temp <- sign_data
} else {
temp <- rbind(temp, sign_data)
}
if(nrow(temp) == 0) {
temp <- sign_data
} else {
temp <- rbind(temp, sign_data)
}
if (nrow(temp) == 0) {
temp <- sign_data
} else {
temp <- rbind(temp, sign_data)
}
library(jsonlite)
library(dplyr)
temp <- data.frame()
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- sign_data %>%
mutate(timestamp = Sys.time())
if (nrow(temp) == 0) {
temp <- sign_data
} else {
temp <- rbind(temp, sign_data)
}
library(jsonlite)
library(dplyr)
temp <- data.frame()
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- sign_data %>%
mutate(timestamp = Sys.time())
if (nrow(temp) == 0) {
temp <- sign_data
} else {
temp <- rbind(temp, sign_data)
}
library(jsonlite)
library(dplyr)
temp <- data.frame()
json_data <- fromJSON("https://petition.parliament.uk/petitions/269157.json", flatten = FALSE)
sign_data <- json_data$data$attributes$signatures_by_constituency
sign_data <- sign_data %>%
mutate(timestamp = Sys.time())
if (nrow(temp) == 0) {
temp <- sign_data
} else {
temp <- rbind(temp, sign_data)
}
View(temp)
temp <- data.frame()
sign_data+paste(Sys.time()) <- json_data$data$attributes$signatures_by_constituency
blogdown::install_theme(gcushen/academic-kickstart)
blogdown::install_theme(sourcethemes/academic-kickstart, force = TRUE)
blogdown::install_theme("sourcethemes/academic-kickstart", force = TRUE)
blogdown:::serve_site()
blogdown:::serve_site()
install.packages("blogdown")
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
